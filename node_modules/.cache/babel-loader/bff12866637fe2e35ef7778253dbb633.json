{"ast":null,"code":"var _jsxFileName = \"/home/julia/Trybe/projects_Trybe/sd-06-project-recipes-app/src/pages/FavoriteRecipes.js\";\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport shareIcon from \"../images/shareIcon.svg\";\nimport blackHeartIcon from \"../images/blackHeartIcon.svg\"; // import whiteHeartIcon from '../images/whiteHeartIcon.svg';\n\nfunction FavoriteRecipes() {\n  const localSt = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  const [spanHidden, setSpanHidden] = useState(true);\n  const [allState, setAllState] = useState(true);\n  const [mealsState, setMealsState] = useState(false);\n  const [drinkState, setDrinkState] = useState(false);\n  const [favoriteRecipe, setFavoriteRecipe] = useState([]);\n\n  function handleClick(e) {\n    const itemId = e;\n    const localStorageFavRecipes = localStorage.getItem('favoriteRecipes');\n\n    if (localStorageFavRecipes !== null) {\n      const favRecipesArr = JSON.parse(localStorageFavRecipes);\n      const newFavRecipesArr = favRecipesArr.filter(element => element.id !== itemId);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(newFavRecipesArr));\n      setFavoriteRecipe(newFavRecipesArr);\n    }\n  }\n\n  function copyToClipBoard(type, id, url) {\n    const splitedUrl = url.split('receitas-favoritas').join('');\n    const completeUrl = [splitedUrl, type, 's', '/', id].join('');\n    console.log(type);\n    console.log(id);\n    console.log(url);\n    console.log(completeUrl);\n    navigator.clipboard.writeText(completeUrl);\n    setSpanHidden(false);\n  }\n\n  function handleMealsAndDrinks(e) {\n    const typeBtn = e.target.value;\n\n    if (typeBtn === 'comida') {\n      setAllState(false);\n      setMealsState(true);\n      setDrinkState(false);\n    }\n\n    if (typeBtn === 'bebida') {\n      setAllState(false);\n      setMealsState(false);\n      setDrinkState(true);\n    }\n\n    if (typeBtn === 'all') {\n      setAllState(true);\n      setMealsState(false);\n      setDrinkState(false);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"Receitas favoritas\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"favorite-recipes-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"filter-by-all-btn\",\n    name: \"all\",\n    value: \"all\",\n    onClick: e => handleMealsAndDrinks(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"filter-by-food-btn\",\n    name: \"comida\",\n    value: \"comida\",\n    onClick: e => handleMealsAndDrinks(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"Food\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"filter-by-drink-btn\",\n    name: \"bebida\",\n    value: \"bebida\",\n    onClick: e => handleMealsAndDrinks(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Drinks\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"favorite-recipes-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, allState && favoriteRecipe ? localSt && localSt.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/${item.type}s/${item.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    height: \"150px\",\n    src: item.image,\n    alt: \"element img\",\n    \"data-testid\": `${index}-horizontal-image`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": `${index}-horizontal-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, item.name)), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-top-text`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, item.type === 'comida' ? `${item.area} - ${item.category}` : `${item.alcoholicOrNot} - ${item.category}`), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-done-date`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, item.doneDate), item.tags && item.tags.map((tag, idx) => /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-${tag}-horizontal-tag`,\n    key: idx,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 19\n    }\n  }, tag)), /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": `${index}-horizontal-share-btn`,\n    type: \"button\",\n    src: shareIcon,\n    onClick: () => copyToClipBoard(item.type, item.id, document.URL),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: shareIcon,\n    alt: \"Share Icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": `${index}-horizontal-favorite-btn`,\n    src: blackHeartIcon,\n    onClick: () => handleClick(item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"bla\",\n    src: blackHeartIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  })))) : null, mealsState && favoriteRecipe ? localSt && localSt.filter(el => el.type === 'comida').map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/${item.type}s/${item.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: item.image,\n    alt: \"element img\",\n    \"data-testid\": `${index}-horizontal-image`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": `${index}-horizontal-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 19\n    }\n  }, item.name)), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-top-text`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, item.type === 'comida' ? `${item.area} - ${item.category}` : `${item.alcoholicOrNot} - ${item.category}`), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-done-date`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, item.doneDate), item.tags && item.tags.map((tag, idx) => /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-${tag}-horizontal-tag`,\n    key: idx,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 21\n    }\n  }, tag)), /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": `${index}-horizontal-share-btn`,\n    type: \"button\",\n    src: shareIcon,\n    onClick: () => copyToClipBoard(item.type, item.id, document.URL),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: shareIcon,\n    alt: \"Share Icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": `${index}-horizontal-favorite-btn`,\n    src: blackHeartIcon,\n    onClick: () => handleClick(item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"bla\",\n    src: blackHeartIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 19\n    }\n  })))) : null, drinkState && favoriteRecipe ? localSt && localSt.filter(el => el.type === 'bebida').map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/${item.type}s/${item.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: item.image,\n    alt: \"element img\",\n    \"data-testid\": `${index}-horizontal-image`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": `${index}-horizontal-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }, item.name)), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-top-text`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  }, item.type === 'comida' ? `${item.area} - ${item.category}` : `${item.alcoholicOrNot} - ${item.category}`), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-done-date`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 15\n    }\n  }, item.doneDate), item.tags && item.tags.map((tag, idx) => /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-${tag}-horizontal-tag`,\n    key: idx,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 19\n    }\n  }, tag)), /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": `${index}-horizontal-share-btn`,\n    type: \"button\",\n    src: shareIcon,\n    onClick: () => copyToClipBoard(item.type, item.id, document.URL),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: shareIcon,\n    alt: \"Share Icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": `${index}-horizontal-favorite-btn`,\n    src: blackHeartIcon,\n    onClick: () => handleClick(item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"bla\",\n    src: blackHeartIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 17\n    }\n  })))) : null), /*#__PURE__*/React.createElement(\"span\", {\n    hidden: spanHidden,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }\n  }, \"Link copiado!\"));\n}\n\nexport default FavoriteRecipes;","map":{"version":3,"sources":["/home/julia/Trybe/projects_Trybe/sd-06-project-recipes-app/src/pages/FavoriteRecipes.js"],"names":["React","useState","Link","Header","FavoriteRecipes","localSt","JSON","parse","localStorage","getItem","spanHidden","setSpanHidden","allState","setAllState","mealsState","setMealsState","drinkState","setDrinkState","favoriteRecipe","setFavoriteRecipe","handleClick","e","itemId","localStorageFavRecipes","favRecipesArr","newFavRecipesArr","filter","element","id","setItem","stringify","copyToClipBoard","type","url","splitedUrl","split","join","completeUrl","console","log","navigator","clipboard","writeText","handleMealsAndDrinks","typeBtn","target","value","map","item","index","image","name","area","category","alcoholicOrNot","doneDate","tags","tag","idx","shareIcon","document","URL","blackHeartIcon","el"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport shareIcon from '../images/shareIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\n// import whiteHeartIcon from '../images/whiteHeartIcon.svg';\n\nfunction FavoriteRecipes() {\n  const localSt = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  const [spanHidden, setSpanHidden] = useState(true);\n  const [allState, setAllState] = useState(true);\n  const [mealsState, setMealsState] = useState(false);\n  const [drinkState, setDrinkState] = useState(false);\n  const [favoriteRecipe, setFavoriteRecipe] = useState([]);\n\n  function handleClick(e) {\n    const itemId = e;\n    const localStorageFavRecipes = localStorage.getItem('favoriteRecipes');\n    if (localStorageFavRecipes !== null) {\n      const favRecipesArr = JSON.parse(localStorageFavRecipes);\n      const newFavRecipesArr = favRecipesArr.filter((element) => element.id !== itemId);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(newFavRecipesArr));\n      setFavoriteRecipe(newFavRecipesArr);\n    }\n  }\n\n  function copyToClipBoard(type, id, url) {\n    const splitedUrl = url.split('receitas-favoritas').join('');\n    const completeUrl = [splitedUrl, type, 's', '/', id].join('');\n    console.log(type);\n    console.log(id);\n    console.log(url);\n    console.log(completeUrl);\n    navigator.clipboard.writeText(completeUrl);\n    setSpanHidden(false);\n  }\n\n  function handleMealsAndDrinks(e) {\n    const typeBtn = e.target.value;\n    if (typeBtn === 'comida') {\n      setAllState(false);\n      setMealsState(true);\n      setDrinkState(false);\n    }\n    if (typeBtn === 'bebida') {\n      setAllState(false);\n      setMealsState(false);\n      setDrinkState(true);\n    }\n    if (typeBtn === 'all') {\n      setAllState(true);\n      setMealsState(false);\n      setDrinkState(false);\n    }\n  }\n\n  return (\n    <div>\n      <Header />\n      <h2>Receitas favoritas</h2>\n      <div className=\"favorite-recipes-button\">\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-all-btn\"\n          name=\"all\"\n          value=\"all\"\n          onClick={ (e) => handleMealsAndDrinks(e) }\n        >\n          All\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-food-btn\"\n          name=\"comida\"\n          value=\"comida\"\n          onClick={ (e) => handleMealsAndDrinks(e) }\n        >\n          Food\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-drink-btn\"\n          name=\"bebida\"\n          value=\"bebida\"\n          onClick={ (e) => handleMealsAndDrinks(e) }\n        >\n          Drinks\n        </button>\n      </div>\n      <div className=\"favorite-recipes-div\">\n        { allState && favoriteRecipe\n          ? localSt && localSt.map((item, index) => (\n            <div key={ index }>\n              <Link to={ `/${item.type}s/${item.id}` }>\n                <img\n                  height=\"150px\"\n                  src={ item.image }\n                  alt=\"element img\"\n                  data-testid={ `${index}-horizontal-image` }\n                />\n                <h2 data-testid={ `${index}-horizontal-name` }>{ item.name }</h2>\n              </Link>\n              <p\n                data-testid={ `${index}-horizontal-top-text` }\n              >\n                { item.type === 'comida'\n                  ? `${item.area} - ${item.category}`\n                  : `${item.alcoholicOrNot} - ${item.category}` }\n              </p>\n              <p data-testid={ `${index}-horizontal-done-date` }>{ item.doneDate }</p>\n              {\n                item.tags\n              && item.tags.map(\n                (tag, idx) => (\n                  <p\n                    data-testid={ `${index}-${tag}-horizontal-tag` }\n                    key={ idx }\n                  >\n                    { tag }\n                  </p>\n                ),\n              )\n              }\n              <button\n                data-testid={ `${index}-horizontal-share-btn` }\n                type=\"button\"\n                src={ shareIcon }\n                onClick={ () => copyToClipBoard(item.type, item.id, document.URL) }\n              >\n                <img src={ shareIcon } alt=\"Share Icon\" />\n              </button>\n              <button\n                type=\"button\"\n                data-testid={ `${index}-horizontal-favorite-btn` }\n                src={ blackHeartIcon }\n                onClick={ () => handleClick(item.id) }\n              >\n                <img alt=\"bla\" src={ blackHeartIcon } />\n              </button>\n            </div>\n          ))\n          : null }\n        {\n          mealsState && favoriteRecipe\n            ? localSt\n            && localSt.filter((el) => el.type === 'comida').map((item, index) => (\n              <div key={ index }>\n                <Link to={ `/${item.type}s/${item.id}` }>\n                  <img\n                    src={ item.image }\n                    alt=\"element img\"\n                    data-testid={ `${index}-horizontal-image` }\n                  />\n                  <h2 data-testid={ `${index}-horizontal-name` }>{ item.name }</h2>\n                </Link>\n                <p\n                  data-testid={ `${index}-horizontal-top-text` }\n                >\n                  {\n                    item.type === 'comida'\n                      ? `${item.area} - ${item.category}`\n                      : `${item.alcoholicOrNot} - ${item.category}`\n                  }\n                </p>\n                <p data-testid={ `${index}-horizontal-done-date` }>{ item.doneDate }</p>\n                {\n                  item.tags\n                && item.tags.map(\n                  (tag, idx) => (\n                    <p\n                      data-testid={ `${index}-${tag}-horizontal-tag` }\n                      key={ idx }\n                    >\n                      { tag }\n                    </p>\n                  ),\n                )\n                }\n                <button\n                  data-testid={ `${index}-horizontal-share-btn` }\n                  type=\"button\"\n                  src={ shareIcon }\n                  onClick={ () => copyToClipBoard(item.type, item.id, document.URL) }\n                >\n                  <img src={ shareIcon } alt=\"Share Icon\" />\n                </button>\n                <button\n                  type=\"button\"\n                  data-testid={ `${index}-horizontal-favorite-btn` }\n                  src={ blackHeartIcon }\n                  onClick={ () => handleClick(item.id) }\n                >\n                  <img alt=\"bla\" src={ blackHeartIcon } />\n                </button>\n              </div>\n            ))\n            : null\n        }\n        { drinkState && favoriteRecipe\n          ? localSt && localSt.filter((el) => el.type === 'bebida').map((item, index) => (\n            <div key={ index }>\n              <Link to={ `/${item.type}s/${item.id}` }>\n                <img\n                  src={ item.image }\n                  alt=\"element img\"\n                  data-testid={ `${index}-horizontal-image` }\n                />\n                <h2 data-testid={ `${index}-horizontal-name` }>{ item.name }</h2>\n              </Link>\n              <p\n                data-testid={ `${index}-horizontal-top-text` }\n              >\n                {\n                  item.type === 'comida'\n                    ? `${item.area} - ${item.category}`\n                    : `${item.alcoholicOrNot} - ${item.category}`\n                }\n              </p>\n              <p data-testid={ `${index}-horizontal-done-date` }>{ item.doneDate }</p>\n              {\n                item.tags\n              && item.tags.map(\n                (tag, idx) => (\n                  <p\n                    data-testid={ `${index}-${tag}-horizontal-tag` }\n                    key={ idx }\n                  >\n                    { tag }\n                  </p>\n                ),\n              )\n              }\n              <button\n                data-testid={ `${index}-horizontal-share-btn` }\n                type=\"button\"\n                src={ shareIcon }\n                onClick={ () => copyToClipBoard(item.type, item.id, document.URL) }\n              >\n                <img src={ shareIcon } alt=\"Share Icon\" />\n              </button>\n              <button\n                type=\"button\"\n                data-testid={ `${index}-horizontal-favorite-btn` }\n                src={ blackHeartIcon }\n                onClick={ () => handleClick(item.id) }\n              >\n                <img alt=\"bla\" src={ blackHeartIcon } />\n              </button>\n            </div>\n          ))\n          : null }\n      </div>\n      <span hidden={ spanHidden }>Link copiado!</span>\n    </div>\n  );\n}\n\nexport default FavoriteRecipes;\n"]},"metadata":{},"sourceType":"module"}